////////////////////////////////////////////////////////////////////////////////////
///
///  \file visualsensor.cpp
///  \brief Contains the Visual Sensor Service implementation.
///
///  <br>Author(s): Brian Valentino
///  <br>Created: 7 March 2011
///  <br>Copyright (c) 2011
///  <br>Robotics Club at UCF
///  <br>University of Central Florida (UCF)
///  <br>All rights reserved.
///  <br>Email: bmvalentino@gmail.com
///  <br>Web:  http://robotics.ucf.edu
///
///  Redistribution and use in source and binary forms, with or without
///  modification, are permitted provided that the following conditions are met:
///      * Redistributions of source code must retain the above copyright
///        notice, this list of conditions and the following disclaimer.
///      * Redistributions in binary form must reproduce the above copyright
///        notice, this list of conditions and the following disclaimer in the
///        documentation and/or other materials provided with the distribution.
///      * Neither the name of the ROBOTICS CLUB AT UCF, UCF, nor the
///        names of its contributors may be used to endorse or promote products
///        derived from this software without specific prior written permission.
///
///  THIS SOFTWARE IS PROVIDED BY THE ROBOTICS CLUB AT UCF ''AS IS'' AND ANY
///  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
///  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
///  DISCLAIMED. IN NO EVENT SHALL UCF BE LIABLE FOR ANY
///  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
///  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
///  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
///  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
///  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
///  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///
////////////////////////////////////////////////////////////////////////////////////
#include "asvc/baseline/visualsensor.h"

using namespace Zebulon;
using namespace ASVC;


////////////////////////////////////////////////////////////////////////////////////
///
///   \brief Constructor.
///
////////////////////////////////////////////////////////////////////////////////////
VisualSensor::VisualSensor()
{
   
}


////////////////////////////////////////////////////////////////////////////////////
///
///   \brief Destructor.
///
////////////////////////////////////////////////////////////////////////////////////
VisualSensor::~VisualSensor()
{
    
    
}

////////////////////////////////////////////////////////////////////////////////////
///
///   \brief Callback generated by the camera interface (CvImageCapture).
///
///   This method takes the current image data, and save it to internal
///   data members.
///
////////////////////////////////////////////////////////////////////////////////////
void VisualSensor::ProcessCameraData(Video::CvImageCapture::Image* dest)
{
    SetCurrentFrame(dest->mpData,       // Pointer to image data.
                    dest->mWidth,       // Image width in pixels.
                    dest->mHeight,      // Image height in pixels.
                    dest->mChannels,    // Number of color channels (usually 3)
                    dest->mID,          // Camera ID/Number.
                    24.0);              // Estimated framerate.

}

/* End of File */

